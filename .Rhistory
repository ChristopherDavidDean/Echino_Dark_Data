lapply(LRresults, function(l){
a <- l[[2]][3]
b <- l[[3]]
as.vector(c(a, b))
})
bind_rows(lapply(LRresults, function(l){
a <- l[[2]][3]
b <- l[[3]]
as.vector(c(a, b))
}))
lapply(LRresults, function(l){
a <- l[[2]][3]
b <- l[[3]]
as.data.frame(c(a, b))
})
bind_rows(lapply(LRresults, function(l){
a <- l[[2]][3]
b <- l[[3]]
t(as.data.frame(c(a, b)))
})
)
lapply(LRresults, function(l){
a <- l[[2]][3]
b <- l[[3]]
t(as.data.frame(c(a, b)))
})
lapply(LRresults, function(l){
a <- l[[2]][3]
b <- l[[3]]
(data.frame(Formula = a, Score = b))
})
bind_rows(lapply(LRresults, function(l){
a <- l[[2]][3]
b <- l[[3]]
(data.frame(Formula = a, Score = b))
}))
bind_rows(lapply(LRresults, function(l){
(data.frame(Formula = l[[2]][3], Score = l[[3]]))
}))
ctable <- bind_rows(lapply(LRresults, function(l){data.frame(Formula = l[[2]][3],
Score = l[[3]])}))
ctable
bind_rows(lapply(LRresults, `[[`, 1))
model.set <- bind_rows(lapply(LRresults, function(l){data.frame(Formula = l[[2]][3],
Score = l[[3]])}))
ctable <- bind_rows(lapply(LRresults, `[[`, 1))
View(ctable)
# Save models
write.csv(model.set,
file = "Results/model.set.csv",
row.names = FALSE)
write.csv(ctable,
file = "Results/ctable.csv",
row.names = TRUE)
ctable <- read.csv("Results/ctable.csv")
ctable$PresScore <- as.factor(ctable$PresScore)
ctable <- ctable %>%
filter(!(`Std. Error` > 10))
ctable
ctable <- read.csv("Results/ctable.csv")
ctable$PresScore <- as.factor(ctable$PresScore)
ctable <- ctable %>%
filter(!(`Std..Error` > 10))
ctable[ctable == "`Age (Ma)`"] <- "Age (Ma)"
ctable[ctable == "`Palaeo-latitude`"] <- "Palaeo-latitude"
ctable[ctable == "(Intercept)"] <- "Intercept"
ctable[ctable == "GrainsizeFine Grained"] <- "Grainsize: Fine Grained"
ctable[ctable == "LithologySiliciclastic"] <- "Lithology: Siliciclastic"
ctable[ctable == "GrainsizeFine Grained:LithologySiliciclastic"] <- "Grainsize x Lithology: Fine Grained x Siliciclastic"
ctable
ctable <- ctable[order(ctable$Covariate),]
ctable <- ctable[order(ctable$PresScore),]
forestplot(
df = ctable,
name = Covariate,
estimate = Estimate,
se = `Std. Error`,
title = "",
colour = PresScore,
pvalue = `Pr(>|z|)`,
psignif = 0.05
) + ggplot2::facet_wrap(
facets = ~PresScore,
nrow = 5,
ncol = 1,
scales = "free_y"
) + theme(strip.text.x = element_blank(),
panel.border = element_rect(colour = "black", fill=NA, linewidth=0.5)) +
scale_colour_manual(values = wesanderson::wes_palette("Zissou1", type = 'discrete'))
ctable
forestplot(
df = ctable,
name = Covariate,
estimate = Estimate,
se = `Std..Error`,
title = "",
colour = PresScore,
pvalue = `Pr...z..`,
psignif = 0.05
) + ggplot2::facet_wrap(
facets = ~PresScore,
nrow = 5,
ncol = 1,
scales = "free_y"
) + theme(strip.text.x = element_blank(),
panel.border = element_rect(colour = "black", fill=NA, linewidth=0.5)) +
scale_colour_manual(values = wesanderson::wes_palette("Zissou1", type = 'discrete'))
# Make columns for period/series, then bin time to stage level (this is so that both are in one dataset)
#m.dat.period$Period <- as.character(m.dat.period$bin_assignment)
#m.dat.period$Period.no <- as.numeric(m.dat.period$bin_assignment)
#m.dat.period <- bin_time(m.dat.period, bins = stages, method = "majority")
m.dat.series$Period <- as.character(m.dat.series$bin_assignment)
m.dat.series$Period.no <- as.numeric(m.dat.series$bin_assignment)
m.dat.period <- bin_time(m.dat.series, bins = stages, method = "majority")
# Split out species and genus level information
species.lvl <- m.dat.period %>%
dplyr::filter(Rank == "Species") %>%
dplyr::select(Genus, Species, Locality, bin_midpoint, Period, Period.no, Preservation_score) %>%
mutate(Combined_name = paste(Genus, Species, sep = " "))
genus.lvl <- m.dat.period %>%
dplyr::filter(Rank == "Genus") %>%
dplyr::select(Genus, Locality, bin_midpoint, Period, Period.no, Preservation_score)
all.lvl <- m.dat.period %>%
dplyr::select(Locality, bin_midpoint, Period, Period.no, Preservation_score)
##### Make tables of number of taxa per preservation score for each time frame #####
# All specimens
stage.pres.all <- as.data.frame(table(all.lvl$bin_midpoint, all.lvl$Preservation_score))
colnames(stage.pres.all) <- c("bin_midpoint", "Preservation_score", "Freq")
period.pres.all <- as.data.frame(table(all.lvl$Period, all.lvl$Preservation_score))
# Species
stage.pres.spec <- as.data.frame(table(species.lvl$bin_midpoint, species.lvl$Preservation_score))
colnames(stage.pres.spec) <- c("bin_midpoint", "Preservation_score", "Freq")
period.pres.spec <- as.data.frame(table(species.lvl$Period, species.lvl$Preservation_score))
# Genera
stage.pres.gen <- as.data.frame(table(genus.lvl$bin_midpoint, genus.lvl$Preservation_score))
colnames(stage.pres.gen) <- c("bin_midpoint", "Preservation_score", "Freq")
period.pres.gen <- as.data.frame(table(genus.lvl$Period, genus.lvl$Preservation_score))
# Run divDyn to get diversity/collections at genus and species level for each time frame
div.stage.spec <- binstat(species.lvl,
tax="Combined_name",
bin="bin_midpoint",
coll = 'Locality')
div.stage.gen <- binstat(genus.lvl,
tax="Genus",
bin="bin_midpoint",
coll = 'Locality')
div.period.spec <- binstat(species.lvl,
tax= "Combined_name",
bin="Period.no",
coll = 'Locality')
div.period.gen <- binstat(genus.lvl,
tax = "Genus",
bin = "Period.no",
coll = 'Locality')
# Get all collections overall
all.colls <- all.lvl %>%
dplyr::select(bin_midpoint, Locality, Period.no, Period) %>%
distinct()
Period.colls <- as.data.frame(table(all.colls$Period))
Stage.colls <- as.data.frame(table(all.colls$bin_midpoint))
# Create order for period
# order_ind <- c("Permian", "Carboniferous", "Devonian", "Silurian", "Ordovician")
# Create order for series
order_ind <- c("Permian", "Pennsylvanian", "Mississippian", "Devonian", "Silurian", "Ordovician")
# Run function for each level
split(period.pres.gen, period.pres.gen$Var2, order = TRUE)
split(period.pres.spec, period.pres.spec$Var2, order = TRUE)
split(period.pres.all, period.pres.all$Var2, order = TRUE)
split(stage.pres.all, Var2 = stage.pres.all$Preservation_score, order = FALSE, stage = TRUE)
split(stage.pres.spec, Var2 = stage.pres.spec$Preservation_score, order = FALSE, stage = TRUE)
split(stage.pres.gen, Var2 = stage.pres.gen$Preservation_score, order = FALSE, stage = TRUE)
temp_stages <- stages[55:92,]
temp_stages$bin_midpoint <- (temp_stages$max_ma + temp_stages$min_ma)/2
div.stage.spec <- merge(temp_stages, div.stage.spec, by = "bin_midpoint", all.x = T)
div.stage.gen <- merge(temp_stages, div.stage.gen, by = "bin_midpoint", all.x = T)
colnames(Stage.colls)[1] <- "bin_midpoint"
col.stage.all <- merge(temp_stages, Stage.colls, by = "bin_midpoint", all.x = T)
##### Get comprehensive collections through time #####
# Load PBDB Palaeozoic invert occurrences
all.pbdb <- read.csv("Specimen_data/all_palaeozoic_binned.csv")
# Filter to correct age
all.pbdb.period <- all.pbdb %>%
filter(max_ma < 485.4) %>%
filter(min_ma > 251.902)
# Bin
all.pbdb.period <- bin_time(all.pbdb.period, series, method = 'majority')
pbdb.stat <- binstat(all.pbdb,
tax= "accepted_name",
bin="bin_assignment",
coll = "collection_no",
noNAStart = TRUE)
pbdb.period.stat <- binstat(all.pbdb.period,
tax = "accepted_name",
bin="bin_midpoint",
coll = "collection_no")
pbdb.stat <- pbdb.stat[7:nrow(pbdb.stat),]
pbdb.stat$bin <- pbdb.stat$bin_assignment
pbdb.stat <- merge(temp_stages, pbdb.stat, by = "bin", all.x = T)
# Load all palaeozoic echinodermata occurrences
pb.echino <- read.csv("Specimen_data/Echinodermata.csv", skip = 19)
pb.echino <- pb.echino %>%
dplyr::filter(max_ma < 485.4000) %>%
dplyr::filter(min_ma > 251.2000)
pb.echino.period <- bin_time(pb.echino, series, method = 'majority')
pb.echino <- bin_time(pb.echino, bins = stages, method = 'majority')
pb.echino <- binstat(pb.echino,
tax= "accepted_name",
bin="bin_assignment",
coll = "collection_no",
noNAStart = TRUE)
pb.echino.period <- binstat(pb.echino.period,
tax = "accepted_name",
bin="bin_midpoint",
coll = "collection_no")
pb.echino$bin <- pb.echino$bin_assignment
pb.echino <- merge(temp_stages, pb.echino, by = "bin", all.x = TRUE)
stage.pres.ratio <- as.data.frame(table(all.lvl$bin_midpoint))
colnames(stage.pres.ratio) <- c("bin_midpoint", "Freq")
stage.pres.ratio <- merge(temp_stages, stage.pres.ratio, by = "bin_midpoint", all.x = TRUE)
stage.pres.ratio[is.na(stage.pres.ratio)] <- 0
stage.pres.ratio$ratio_1 <- stage.pres.all.1$Freq/stage.pres.ratio$Freq
stage.pres.ratio$ratio_5 <- stage.pres.all.5$Freq/stage.pres.ratio$Freq
##################################
##### DIVERSITY CORRELATIONS #####
##################################
##### SPECIES #####
# Setup complete list of bins
div.stage.spec.comp <- merge(stage.pres.all.1, div.stage.spec, by = "bin_midpoint", all.x = TRUE)
# Stage - diversity vs.preservation score
stage.spec.div.1 <- cor.test(log10(div.stage.spec.comp$SIBs), log10(stage.pres.all.1$Freq), method = 'spearman')
stage.spec.div.2 <- cor.test(log10(div.stage.spec.comp$SIBs), log10(stage.pres.all.2$Freq), method = 'spearman')
stage.spec.div.3 <- cor.test(log10(div.stage.spec.comp$SIBs), log10(stage.pres.all.3$Freq), method = 'spearman')
stage.spec.div.4 <- cor.test(log10(div.stage.spec.comp$SIBs), log10(stage.pres.all.4$Freq), method = 'spearman')
stage.spec.div.5 <- cor.test(log10(div.stage.spec.comp$SIBs), log10(stage.pres.all.5$Freq), method = 'spearman')
stage.spec.ratio.1 <- cor.test(log10(div.stage.spec.comp$SIBs), log10(stage.pres.ratio$ratio_1), method = 'spearman')
stage.spec.ratio.5 <- cor.test(log10(div.stage.spec.comp$SIBs), log10(stage.pres.ratio$ratio_5), method = 'spearman')
stage.div.spec <- rbind(c("Stage", 1, "Diversity (species)", stage.spec.div.1$estimate, stage.spec.div.1$p.value),
c("Stage", 2, "Diversity (species)", stage.spec.div.2$estimate, stage.spec.div.2$p.value),
c("Stage", 3, "Diversity (species)", stage.spec.div.3$estimate, stage.spec.div.3$p.value),
c("Stage", 4, "Diversity (species)", stage.spec.div.4$estimate, stage.spec.div.4$p.value),
c("Stage", 5, "Diversity (species)", stage.spec.div.5$estimate, stage.spec.div.5$p.value))
# Period - diversity vs. preservation score
period.spec.div.1 <- cor.test(log10(div.period.spec$SIBs), log10(period.pres.all.1$Freq), method = 'spearman')
period.spec.div.2 <- cor.test(log10(div.period.spec$SIBs), log10(period.pres.all.2$Freq), method = 'spearman')
period.spec.div.3 <- cor.test(log10(div.period.spec$SIBs), log10(period.pres.all.3$Freq), method = 'spearman')
period.spec.div.4 <- cor.test(log10(div.period.spec$SIBs), log10(period.pres.all.4$Freq), method = 'spearman')
period.spec.div.5 <- cor.test(log10(div.period.spec$SIBs), log10(period.pres.all.5$Freq), method = 'spearman')
period.div.spec <- rbind(c("Period", 1, "Diversity (species)", period.spec.div.1$estimate, period.spec.div.1$p.value),
c("Period", 2, "Diversity (species)", period.spec.div.2$estimate, period.spec.div.2$p.value),
c("Period", 3, "Diversity (species)", period.spec.div.3$estimate, period.spec.div.3$p.value),
c("Period", 4, "Diversity (species)", period.spec.div.4$estimate, period.spec.div.4$p.value),
c("Period", 5, "Diversity (species)", period.spec.div.5$estimate, period.spec.div.5$p.value))
##### GENERA #####
# Setup complete list of bins
div.stage.gen.comp <- merge(stage.pres.all.1, div.stage.gen, by = "bin_midpoint", all.x = TRUE)
# Stage - diversity vs.preservation score
stage.gen.div.1 <- cor.test(log10(div.stage.gen.comp$SIBs), log10(stage.pres.all.1$Freq), method = 'spearman')
stage.gen.div.2 <- cor.test(log10(div.stage.gen.comp$SIBs), log10(stage.pres.all.2$Freq), method = 'spearman')
stage.gen.div.3 <- cor.test(log10(div.stage.gen.comp$SIBs), log10(stage.pres.all.3$Freq), method = 'spearman')
stage.gen.div.4 <- cor.test(log10(div.stage.gen.comp$SIBs), log10(stage.pres.all.4$Freq), method = 'spearman')
stage.gen.div.5 <- cor.test(log10(div.stage.gen.comp$SIBs), log10(stage.pres.all.5$Freq), method = 'spearman')
stage.gen.ratio.1 <- cor.test(log10(div.stage.gen.comp$SIBs), log10(stage.pres.ratio$ratio_1), method = 'spearman')
stage.gen.ratio.5 <- cor.test(log10(div.stage.gen.comp$SIBs), log10(stage.pres.ratio$ratio_5), method = 'spearman')
stage.div.gen <-  rbind(c("Stage", 1, "Diversity (genera)",stage.gen.div.1$estimate, stage.gen.div.1$p.value),
c("Stage", 2, "Diversity (genera)",stage.gen.div.2$estimate, stage.gen.div.2$p.value),
c("Stage", 3, "Diversity (genera)",stage.gen.div.3$estimate, stage.gen.div.3$p.value),
c("Stage", 4, "Diversity (genera)",stage.gen.div.4$estimate, stage.gen.div.4$p.value),
c("Stage", 5, "Diversity (genera)",stage.gen.div.5$estimate, stage.gen.div.5$p.value))
# Period - diversity vs. preservation score
period.gen.div.1 <- cor.test(log10(div.period.gen$SIBs), log10(period.pres.all.1$Freq), method = 'spearman')
period.gen.div.2 <- cor.test(log10(div.period.gen$SIBs), log10(period.pres.all.2$Freq), method = 'spearman')
period.gen.div.3 <- cor.test(log10(div.period.gen$SIBs), log10(period.pres.all.3$Freq), method = 'spearman')
period.gen.div.4 <- cor.test(log10(div.period.gen$SIBs), log10(period.pres.all.4$Freq), method = 'spearman')
period.gen.div.5 <- cor.test(log10(div.period.gen$SIBs), log10(period.pres.all.5$Freq), method = 'spearman')
period.div.gen <-  rbind(c("Period", 1, "Diversity (genera)", period.gen.div.1$estimate, period.gen.div.1$p.value),
c("Period", 2, "Diversity (genera)", period.gen.div.2$estimate, period.gen.div.2$p.value),
c("Period", 3, "Diversity (genera)", period.gen.div.3$estimate, period.gen.div.3$p.value),
c("Period", 4, "Diversity (genera)", period.gen.div.4$estimate, period.gen.div.4$p.value),
c("Period", 5, "Diversity (genera)", period.gen.div.5$estimate, period.gen.div.5$p.value))
####################################
##### COLLECTIONS CORRELATIONS #####
####################################
colls.stage.comp <- merge(stage.pres.all.1, Stage.colls, by = "bin_midpoint", all.x = T)
# Stage - echinoid collections vs. preservation score
stage.col.1 <- cor.test(log10(colls.stage.comp$Freq.y), log10(stage.pres.all.1$Freq), method = 'spearman')
stage.col.2 <- cor.test(log10(colls.stage.comp$Freq.y), log10(stage.pres.all.2$Freq), method = 'spearman')
stage.col.3 <- cor.test(log10(colls.stage.comp$Freq.y), log10(stage.pres.all.3$Freq), method = 'spearman')
stage.col.4 <- cor.test(log10(colls.stage.comp$Freq.y), log10(stage.pres.all.4$Freq), method = 'spearman')
stage.col.5 <- cor.test(log10(colls.stage.comp$Freq.y), log10(stage.pres.all.5$Freq), method = 'spearman')
stage.coll.ech <-  rbind(c("Stage", 1, "Echinoid collections", stage.col.1$estimate, stage.col.1$p.value),
c("Stage", 2, "Echinoid collections", stage.col.2$estimate, stage.col.2$p.value),
c("Stage", 3, "Echinoid collections", stage.col.3$estimate, stage.col.3$p.value),
c("Stage", 4, "Echinoid collections", stage.col.4$estimate, stage.col.4$p.value),
c("Stage", 5, "Echinoid collections", stage.col.5$estimate, stage.col.5$p.value))
Period.colls <- Period.colls[match(order_ind, Period.colls$Var1),]
# Period - echinoid collections vs. preservation score
period.col.1 <- cor.test(log10(Period.colls$Freq), log10(period.pres.all.1$Freq), method = 'spearman')
period.col.2 <- cor.test(log10(Period.colls$Freq), log10(period.pres.all.2$Freq), method = 'spearman')
period.col.3 <- cor.test(log10(Period.colls$Freq), log10(period.pres.all.3$Freq), method = 'spearman')
period.col.4 <- cor.test(log10(Period.colls$Freq), log10(period.pres.all.4$Freq), method = 'spearman')
period.col.5 <- cor.test(log10(Period.colls$Freq), log10(period.pres.all.5$Freq), method = 'spearman')
period.coll.ech <-  rbind(c("Period", 1, "Echinoid collections", period.col.1$estimate, period.col.1$p.value),
c("Period", 2, "Echinoid collections", period.col.2$estimate, period.col.2$p.value),
c("Period", 3, "Echinoid collections", period.col.3$estimate, period.col.3$p.value),
c("Period", 4, "Echinoid collections", period.col.4$estimate, period.col.4$p.value),
c("Period", 5, "Echinoid collections", period.col.5$estimate, period.col.5$p.value))
# Stage - global collections vs. preservation score
stage.pbdb.1 <- cor.test(log10(pbdb.stat$colls), log10(stage.pres.all.1$Freq), method = 'spearman')
stage.pbdb.2 <- cor.test(log10(pbdb.stat$colls), log10(stage.pres.all.2$Freq), method = 'spearman')
stage.pbdb.3 <- cor.test(log10(pbdb.stat$colls), log10(stage.pres.all.3$Freq), method = 'spearman')
stage.pbdb.4 <- cor.test(log10(pbdb.stat$colls), log10(stage.pres.all.4$Freq), method = 'spearman')
stage.pbdb.5 <- cor.test(log10(pbdb.stat$colls), log10(stage.pres.all.5$Freq), method = 'spearman')
stage.coll.pbdb <-  rbind(c("Stage", 1, "Global collections (pbdb)", stage.pbdb.1$estimate, stage.pbdb.1$p.value),
c("Stage", 2, "Global collections (pbdb)", stage.pbdb.2$estimate, stage.pbdb.2$p.value),
c("Stage", 3, "Global collections (pbdb)", stage.pbdb.3$estimate, stage.pbdb.3$p.value),
c("Stage", 4, "Global collections (pbdb)", stage.pbdb.4$estimate, stage.pbdb.4$p.value),
c("Stage", 5, "Global collections (pbdb)", stage.pbdb.5$estimate, stage.pbdb.5$p.value))
# Period - global collections vs. preservation score
period.pbdb.1 <- cor.test(log10(pbdb.period.stat$colls), log10(period.pres.all.1$Freq), method = 'spearman')
period.pbdb.2 <- cor.test(log10(pbdb.period.stat$colls), log10(period.pres.all.2$Freq), method = 'spearman')
period.pbdb.3 <- cor.test(log10(pbdb.period.stat$colls), log10(period.pres.all.3$Freq), method = 'spearman')
period.pbdb.4 <- cor.test(log10(pbdb.period.stat$colls), log10(period.pres.all.4$Freq), method = 'spearman')
period.pbdb.5 <- cor.test(log10(pbdb.period.stat$colls), log10(period.pres.all.5$Freq), method = 'spearman')
period.coll.pbdb <- rbind(c("Period", 1, "Global collections (pbdb)", period.pbdb.1$estimate, period.pbdb.1$p.value),
c("Period", 2, "Global collections (pbdb)", period.pbdb.2$estimate, period.pbdb.2$p.value),
c("Period", 3, "Global collections (pbdb)", period.pbdb.3$estimate, period.pbdb.3$p.value),
c("Period", 4, "Global collections (pbdb)", period.pbdb.4$estimate, period.pbdb.4$p.value),
c("Period", 5, "Global collections (pbdb)", period.pbdb.5$estimate, period.pbdb.5$p.value))
colls.stage.echino <- merge(stage.pres.all.1, pb.echino, by = "bin_midpoint", all.x = T)
# Stage - echinodermata collections vs. preservation score
stage.col.echino.1 <- cor.test(log10(colls.stage.echino$colls), log10(stage.pres.all.1$Freq), method = 'spearman')
stage.col.echino.2 <- cor.test(log10(colls.stage.echino$colls), log10(stage.pres.all.2$Freq), method = 'spearman')
stage.col.echino.3 <- cor.test(log10(colls.stage.echino$colls), log10(stage.pres.all.3$Freq), method = 'spearman')
stage.col.echino.4 <- cor.test(log10(colls.stage.echino$colls), log10(stage.pres.all.4$Freq), method = 'spearman')
stage.col.echino.5 <- cor.test(log10(colls.stage.echino$colls), log10(stage.pres.all.5$Freq), method = 'spearman')
stage.coll.echino <- rbind(c("Stage", 1, "Echinodermata collections", stage.col.echino.1$estimate, stage.col.echino.1$p.value),
c("Stage", 2, "Echinodermata collections", stage.col.echino.2$estimate, stage.col.echino.2$p.value),
c("Stage", 3, "Echinodermata collections", stage.col.echino.3$estimate, stage.col.echino.3$p.value),
c("Stage", 4, "Echinodermata collections", stage.col.echino.4$estimate, stage.col.echino.4$p.value),
c("Stage", 5, "Echinodermata collections", stage.col.echino.5$estimate, stage.col.echino.5$p.value))
# Period - echinodermata collections vs. preservation score
period.col.echino.1 <- cor.test(log10(pb.echino.period$colls), log10(period.pres.all.1$Freq), method = 'spearman')
period.col.echino.2 <- cor.test(log10(pb.echino.period$colls), log10(period.pres.all.2$Freq), method = 'spearman')
period.col.echino.3 <- cor.test(log10(pb.echino.period$colls), log10(period.pres.all.3$Freq), method = 'spearman')
period.col.echino.4 <- cor.test(log10(pb.echino.period$colls), log10(period.pres.all.4$Freq), method = 'spearman')
period.col.echino.5 <- cor.test(log10(pb.echino.period$colls), log10(period.pres.all.5$Freq), method = 'spearman')
period.coll.echino <- rbind(c("Period", 1, "Echinodermata collections", period.col.echino.1$estimate, period.col.echino.1$p.value),
c("Period", 2, "Echinodermata collections", period.col.echino.2$estimate, period.col.echino.2$p.value),
c("Period", 3, "Echinodermata collections", period.col.echino.3$estimate, period.col.echino.3$p.value),
c("Period", 4, "Echinodermata collections", period.col.echino.4$estimate, period.col.echino.4$p.value),
c("Period", 5, "Echinodermata collections", period.col.echino.5$estimate, period.col.echino.5$p.value))
a <- ggplot(pbdb.stat, aes(x=bin_midpoint, y=colls)) +
geom_line() +
scale_x_reverse() +
theme_bw() +
coord_geo(dat = series2,
xlim = c(485.4, 251.902),
rot = list(0),
size = 4,
pos = list("b"),
abbrv = T) +
ylab("Count") +
xlab("Time (Ma)")
################################################################################
### MUSEUM `DARK DATA` ILLUMINATES THE EVOLUTIONARY HISTORY OF FOSSIL GROUPS ###
################################################################################
# Christopher D. Dean & Jeffrey R. Thompson
# 2024
# Script written by Christopher D. Dean
a
(a <- ggplot(pbdb.period.stat, aes(x=bin_midpoint, y=colls)) +
geom_line() +
scale_x_reverse() +
theme_bw() +
coord_geo(dat = series2,
xlim = c(485.4, 251.902),
rot = list(0),
size = 4,
pos = list("b"),
abbrv = T) +
ylab("Count") +
xlab("Time (Ma)"))
(a <- ggplot(colls.stage.echino, aes(x=bin_midpoint, y=colls)) +
geom_line() +
scale_x_reverse() +
theme_bw() +
coord_geo(dat = series2,
xlim = c(485.4, 251.902),
rot = list(0),
size = 4,
pos = list("b"),
abbrv = T) +
ylab("Count") +
xlab("Time (Ma)"))
(a <- ggplot(pbdb.stat, aes(x=bin_midpoint, y=colls)) +
geom_line() +
scale_x_reverse() +
theme_bw() +
coord_geo(dat = series2,
xlim = c(485.4, 251.902),
rot = list(0),
size = 4,
pos = list("b"),
abbrv = T) +
ylab("Count") +
xlab("Time (Ma)"))
(a <- ggplot(pbdb.period.stat, aes(x=bin_midpoint, y=colls)) +
geom_line() +
scale_x_reverse() +
theme_bw() +
coord_geo(dat = series2,
xlim = c(485.4, 251.902),
rot = list(0),
size = 4,
pos = list("b"),
abbrv = T) +
ylab("Count") +
xlab("Time (Ma)"))
(a <- ggplot(colls.stage.echino, aes(x=bin_midpoint, y=colls)) +
geom_line() +
scale_x_reverse() +
theme_bw() +
coord_geo(dat = series2,
xlim = c(485.4, 251.902),
rot = list(0),
size = 4,
pos = list("b"),
abbrv = T) +
ylab("Count") +
xlab("Time (Ma)"))
(a <- ggplot(macro.area, aes(x=bin_midpoint, y=count)) +
geom_line(aes(colour = lith)) +
scale_x_reverse() +
theme_bw() +
coord_geo(dat = series2,
xlim = c(485.4, 251.902),
rot = list(0),
size = 4,
pos = list("b"),
abbrv = T) +
ylab("Count") +
xlab("Time (Ma)") +
geom_point(aes(color = lith)))
(a <- ggplot(macro.count, aes(x=bin_midpoint, y=count)) +
geom_line(aes(colour = lith)) +
scale_x_reverse() +
theme_bw() +
coord_geo(dat = series2,
xlim = c(485.4, 251.902),
rot = list(0),
size = 4,
pos = list("b"),
abbrv = T) +
ylab("Count") +
xlab("Time (Ma)") +
geom_point(aes(color = lith)))
# Set extent
e <- extent(-180, 180, -90, 90)
##### ALL SPECIMENS #####
get_grid_im(m.dat, 2,  "Echinoids", ext = e)
##### TAPH GRADES #####
get_grid_im(dplyr::filter(m.dat, Preservation_score == 1), 2,  "Taphonomic Grade 1 Echinoids", ext = e)
# Packages
library(dplyr)
library(iNEXT)
library(ggpubr)
library(rstatix)
library(DescTools)
library(kableExtra)
library(lmtest)
library(nlme)
library(MuMIn)
library(vcd)
library(gtable)
library(cowplot)
# Load required functions
source("1.Dark_Functions.R")
# Load setup file
source("2.Dark_Setup.R")
# Load required functions
source("1.Dark_Functions.R")
# Load setup file
source("2.Dark_Setup.R")
# Format into table and run Chi Squared test
chisq.test(table(m.dat$Preservation_score, m.dat$Museum_only))
# compare against what the test would have expected
chisq.test(table(m.dat$Preservation_score, m.dat$Museum_only))$expected
# Mosaic plot
vcd::mosaic(~ Preservation_score + Museum_only,
direction = c("v", "h"),
data = m.dat,
labeling_args = list(just_labels = "right",
set_varnames = c(Preservation_score = "Preservation Score",
Museum_only = "Only found in museum")),
shade = TRUE
)
library(dplyr)
library(iNEXT)
library(ggpubr)
library(rstatix)
library(DescTools)
library(kableExtra)
library(lmtest)
library(nlme)
library(MuMIn)
library(vcd)
library(gtable)
library(cowplot)
# Load required functions
source("1.Dark_Functions.R")
# Load setup file
source("2.Dark_Setup.R")
