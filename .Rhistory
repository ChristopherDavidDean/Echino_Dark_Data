scale_x_continuous(breaks=p.breaks$x, limits=c(0,6)) +
scale_size_continuous(breaks=breaks,
range=c(1,15)) +
scale_color_manual(values=c("Other"="#e5e5e560",
palv)) +
scale_alpha_continuous(breaks=c(0, 50,100,200,500, 1000,2000, 9999),
range=c(0.3,1)) +
guides(alpha="none") +
labs(col="Region", size="Number of \noutgoing nodes") +
theme_void()
return(p1)
}
# Function for setting up network statistics
reshape.df <- function(x){
x <- sort(x, decreasing = TRUE)[1:15]
names <- names(x)
x <- data.frame(value=x)
if(rownames(x)[1] == "1"){
x <- na.omit(x)
rownames(x) <-  names[complete.cases(names)]
}
x$code <- rownames(x)
x$country <- countrycode(x$code, "iso3c", "country.name")
return(x)
}
# Function to plot foreign vs. domestic contributions to fossil collections
research.plot <- function(df, labs = "Yes"){
colls_n <- data.frame(table(df$aff_code), stringsAsFactors = FALSE)
colnames(colls_n) <- c("code", "freq")
total_colls <- length(unique(df$collection_no))
colls_n$freq <- colls_n$freq/total_colls
colls_n <- colls_n[order(colls_n$freq, decreasing = TRUE),]
topcountries <- colls_n[1:15,]
topcountries <- na.omit(topcountries)
topcountries$country <- countrycode(topcountries$code, origin = "iso3c", destination = "country.name")
dat2 <- df[df$aff_code != df$samp_code,]
dat2 <- unique(dat2[,c("collection_no", "aff_code")])
colls_n2 <- data.frame(table(dat2$aff_code), stringsAsFactors = FALSE)
colnames(colls_n2) <- c("code", "foreign")
colls_n2$foreign <- colls_n2$foreign/total_colls
colls_foreign <-colls_n2[colls_n2$code %in% topcountries$code,]
topcountries <- merge(topcountries, colls_n2, all = TRUE)
topcountries[is.na(topcountries)] <- 0
topcountries$local <- topcountries$freq - topcountries$foreign
if(nrow(topcountries) > 15){
topcountries <- topcountries[order(topcountries$freq, decreasing = TRUE),]
topcountries <- topcountries[1:15,]
}
topcountries <- topcountries %>%  dplyr::select(local, foreign, country) %>%
pivot_longer(cols=c("local", "foreign"), names_to = c("type"), values_to="freq")
topcountries$type <- factor(topcountries$type, levels=c("local", "foreign"))
p1 <- ggplot(topcountries, aes(x=reorder(country, freq), y=freq*100, fill=type)) +
geom_bar(stat="identity") +
labs(x="", y=" % contribution to fossil collections", fill="Fieldwork") +
scale_fill_manual(values=wes_palette("Moonrise2")[c(3,1)],
labels=c("Domestic research", "Foreign research")) +
theme(legend.position = "bottom") +
coord_flip() +
ylim(0, 60) +
guides(fill=guide_legend(ncol=2))
if(labs == "No"){
p1 <- p1 + ylab("") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
}
return(p1)
}
continent.stats <- function(df, data){
codes <- c("samp_code", "aff_code")
iso2c_to_continents <- c(CAN = "North America" , USA = "North America")
a <- bind_rows(lapply(codes, function(x){
dat2 <- df[c(x, "collection_no")]
dat2 <- unique(dat2[,c("collection_no", x)])
dat2$Continent <- countrycode(dat2[,x],
origin = "iso3c",
destination = "continent",
custom_match = iso2c_to_continents)
dat2 <- data.frame(table(dat2$Continent), stringsAsFactors = FALSE)
colnames(dat2) <- c("Continent", "Total")
dat2$Frequency <- dat2$Total/sum(dat2$Total)
dat2$Origin <- ifelse(x == "samp_code", "Country", "Museum")
dat2 <- dat2 %>%
mutate(Continent = str_replace(Continent, "Americas", "South America"))
return(dat2)
}))
a$Data <- data
return(a)
}
top.countries <- function(df, code, sum = NA){
colls_n <- data.frame(table(df[code]), stringsAsFactors = FALSE)
colnames(colls_n) <- c(code, "freq")
total_colls <- length(unique(df$collection_no))
colls_n$freq <- colls_n$freq/total_colls
colls_n <- colls_n[order(colls_n$freq, decreasing = TRUE),]
topcountries <- colls_n[1:15,]
topcountries <- na.omit(topcountries)
if(is.na(sum) == T){
return(topcountries)
}else{
perc <- sum(topcountries$freq[1:sum])*100
return(list(topcountries[1:sum,], perc))
}
}
m.df <- setup.col.sec(m.only.dat)
p.df <- setup.col.sec(pub.all.dat)
a.df <- setup.col.sec(all.dat)
top.countries(m.df, code = "aff_code", 5)
top.countries(m.df, code = "samp_code", 5)
top.countries(p.df, code = "aff_code", 5)
top.countries(p.df, code = "samp_code", 5)
top.countries(a.df, code = "aff_code", 5)
top.countries(a.df, code = "samp_code", 5)
All.cont <- bind_rows(list(continent.stats(a.df, "All"),
continent.stats(p.df, "Published"),
continent.stats(m.df, "Museum")))
ggplot(All.cont, aes(fill = Origin, y = Frequency, x = Continent)) +
geom_bar(position = 'dodge', stat = 'identity') +
coord_flip() +
facet_wrap(~Data, nrow = 3)
All.cont %>%
dplyr::group_by(Data, Origin) %>%
dplyr::filter(Continent == "North America" | Continent == "Europe") %>%
dplyr::summarise(Total_freq = sum(Frequency))
a <- research.plot(a.df, labs = "No")
b <- research.plot(p.df, labs = "No")
c <- research.plot(m.df)
(p17 <- ggarrange(a, b, c,
align="none",
labels = c("A", "B", "C"),
nrow = 3,
ncol = 1,
common.legend = T,
legend = "bottom"))
# Function to plot foreign vs. domestic contributions to fossil collections
research.plot <- function(df, labs = "Yes"){
colls_n <- data.frame(table(df$aff_code), stringsAsFactors = FALSE)
colnames(colls_n) <- c("code", "freq")
total_colls <- length(unique(df$collection_no))
colls_n$freq <- colls_n$freq/total_colls
colls_n <- colls_n[order(colls_n$freq, decreasing = TRUE),]
topcountries <- colls_n[1:15,]
topcountries <- na.omit(topcountries)
topcountries$country <- countrycode(topcountries$code, origin = "iso3c", destination = "country.name")
dat2 <- df[df$aff_code != df$samp_code,]
dat2 <- unique(dat2[,c("collection_no", "aff_code")])
colls_n2 <- data.frame(table(dat2$aff_code), stringsAsFactors = FALSE)
colnames(colls_n2) <- c("code", "foreign")
colls_n2$foreign <- colls_n2$foreign/total_colls
colls_foreign <-colls_n2[colls_n2$code %in% topcountries$code,]
topcountries <- merge(topcountries, colls_n2, all = TRUE)
topcountries[is.na(topcountries)] <- 0
topcountries$local <- topcountries$freq - topcountries$foreign
if(nrow(topcountries) > 15){
topcountries <- topcountries[order(topcountries$freq, decreasing = TRUE),]
topcountries <- topcountries[1:15,]
}
topcountries <- topcountries %>%  dplyr::select(local, foreign, country) %>%
pivot_longer(cols=c("local", "foreign"), names_to = c("type"), values_to="freq")
topcountries$type <- factor(topcountries$type, levels=c("local", "foreign"))
p1 <- ggplot(topcountries, aes(x=reorder(country, freq), y=freq*100, fill=type)) +
geom_bar(stat="identity") +
labs(x="", y=" Percentage contribution to fossil collections", fill="Fieldwork") +
scale_fill_manual(values=wes_palette("Moonrise2")[c(3,1)],
labels=c("Domestic research", "Foreign research")) +
theme(legend.position = "bottom") +
coord_flip() +
ylim(0, 60) +
guides(fill=guide_legend(ncol=2))
if(labs == "No"){
p1 <- p1 + ylab("") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
}
return(p1)
}
a <- research.plot(a.df, labs = "No")
b <- research.plot(p.df, labs = "No")
c <- research.plot(m.df)
(p17 <- ggarrange(a, b, c,
align="none",
labels = c("A", "B", "C"),
nrow = 3,
ncol = 1,
common.legend = T,
legend = "bottom"))
# Function to plot foreign vs. domestic contributions to fossil collections
research.plot <- function(df, labs = "Yes"){
colls_n <- data.frame(table(df$aff_code), stringsAsFactors = FALSE)
colnames(colls_n) <- c("code", "freq")
total_colls <- length(unique(df$collection_no))
colls_n$freq <- colls_n$freq/total_colls
colls_n <- colls_n[order(colls_n$freq, decreasing = TRUE),]
topcountries <- colls_n[1:15,]
topcountries <- na.omit(topcountries)
topcountries$country <- countrycode(topcountries$code, origin = "iso3c", destination = "country.name")
dat2 <- df[df$aff_code != df$samp_code,]
dat2 <- unique(dat2[,c("collection_no", "aff_code")])
colls_n2 <- data.frame(table(dat2$aff_code), stringsAsFactors = FALSE)
colnames(colls_n2) <- c("code", "foreign")
colls_n2$foreign <- colls_n2$foreign/total_colls
colls_foreign <-colls_n2[colls_n2$code %in% topcountries$code,]
topcountries <- merge(topcountries, colls_n2, all = TRUE)
topcountries[is.na(topcountries)] <- 0
topcountries$local <- topcountries$freq - topcountries$foreign
if(nrow(topcountries) > 15){
topcountries <- topcountries[order(topcountries$freq, decreasing = TRUE),]
topcountries <- topcountries[1:15,]
}
topcountries <- topcountries %>%  dplyr::select(local, foreign, country) %>%
pivot_longer(cols=c("local", "foreign"), names_to = c("type"), values_to="freq")
topcountries$type <- factor(topcountries$type, levels=c("local", "foreign"))
return(topcountries)
}
research.plot(a.df, labs = "No")
research.plot(p.df, labs = "No")
research.plot(m.df)
# Function to plot foreign vs. domestic contributions to fossil collections
research.plot <- function(df, data){
colls_n <- data.frame(table(df$aff_code), stringsAsFactors = FALSE)
colnames(colls_n) <- c("code", "freq")
total_colls <- length(unique(df$collection_no))
colls_n$freq <- colls_n$freq/total_colls
colls_n <- colls_n[order(colls_n$freq, decreasing = TRUE),]
topcountries <- colls_n[1:15,]
topcountries <- na.omit(topcountries)
topcountries$country <- countrycode(topcountries$code, origin = "iso3c", destination = "country.name")
dat2 <- df[df$aff_code != df$samp_code,]
dat2 <- unique(dat2[,c("collection_no", "aff_code")])
colls_n2 <- data.frame(table(dat2$aff_code), stringsAsFactors = FALSE)
colnames(colls_n2) <- c("code", "foreign")
colls_n2$foreign <- colls_n2$foreign/total_colls
colls_foreign <-colls_n2[colls_n2$code %in% topcountries$code,]
topcountries <- merge(topcountries, colls_n2, all = TRUE)
topcountries[is.na(topcountries)] <- 0
topcountries$local <- topcountries$freq - topcountries$foreign
if(nrow(topcountries) > 15){
topcountries <- topcountries[order(topcountries$freq, decreasing = TRUE),]
topcountries <- topcountries[1:15,]
}
topcountries <- topcountries %>%  dplyr::select(local, foreign, country) %>%
pivot_longer(cols=c("local", "foreign"), names_to = c("type"), values_to="freq")
topcountries$type <- factor(topcountries$type, levels=c("local", "foreign"))
topcountries$Data <- data
return(topcountries)
}
# Function to plot foreign vs. domestic contributions to fossil collections
research.prep <- function(df, data){
colls_n <- data.frame(table(df$aff_code), stringsAsFactors = FALSE)
colnames(colls_n) <- c("code", "freq")
total_colls <- length(unique(df$collection_no))
colls_n$freq <- colls_n$freq/total_colls
colls_n <- colls_n[order(colls_n$freq, decreasing = TRUE),]
topcountries <- colls_n[1:15,]
topcountries <- na.omit(topcountries)
topcountries$country <- countrycode(topcountries$code, origin = "iso3c", destination = "country.name")
dat2 <- df[df$aff_code != df$samp_code,]
dat2 <- unique(dat2[,c("collection_no", "aff_code")])
colls_n2 <- data.frame(table(dat2$aff_code), stringsAsFactors = FALSE)
colnames(colls_n2) <- c("code", "foreign")
colls_n2$foreign <- colls_n2$foreign/total_colls
colls_foreign <-colls_n2[colls_n2$code %in% topcountries$code,]
topcountries <- merge(topcountries, colls_n2, all = TRUE)
topcountries[is.na(topcountries)] <- 0
topcountries$local <- topcountries$freq - topcountries$foreign
if(nrow(topcountries) > 15){
topcountries <- topcountries[order(topcountries$freq, decreasing = TRUE),]
topcountries <- topcountries[1:15,]
}
topcountries <- topcountries %>%  dplyr::select(local, foreign, country) %>%
pivot_longer(cols=c("local", "foreign"), names_to = c("type"), values_to="freq")
topcountries$type <- factor(topcountries$type, levels=c("local", "foreign"))
topcountries$Data <- data
return(topcountries)
}
research.prep(a.df, data = "All")
Research <- bind_rows(list(research.prep(a.df, data = "All"),
Research <- bind_rows(list(research.prep(a.df, data = "All"),
research.prep(p.df, data = "Published"),
research.prep(m.df, data = "Museum")))
Research
ggplot(Research, aes(x=reorder(country, freq), y=freq*100, fill=type)) +
geom_bar(stat="identity") +
labs(x="", y=" Percentage contribution to fossil collections", fill="Fieldwork") +
scale_fill_manual(values=wes_palette("Moonrise2")[c(3,1)],
labels=c("Domestic research", "Foreign research")) +
theme(legend.position = "bottom") +
coord_flip() +
ylim(0, 60) +
guides(fill=guide_legend(ncol=2)) +
facet_wrap(~Data)
ggplot(Research, aes(x=reorder(country, freq), y=freq*100, fill=type)) +
geom_bar(stat="identity") +
labs(x="", y=" Percentage contribution to fossil collections", fill="Fieldwork") +
scale_fill_manual(values=wes_palette("Moonrise2")[c(3,1)],
labels=c("Domestic research", "Foreign research")) +
theme(legend.position = "bottom") +
coord_flip() +
ylim(0, 60) +
guides(fill=guide_legend(ncol=2)) +
facet_wrap(~Data, nrow = 3)
ggplot(All.cont, aes(fill = Origin, y = Frequency, x = Continent)) +
geom_bar(position = 'dodge', stat = 'identity') +
coord_flip() +
facet_wrap(~Data, nrow = 3, scales = "free")
(p17 <- ggplot(Research, aes(x=reorder(country, freq), y=freq*100, fill=type)) +
geom_bar(stat="identity") +
labs(x="", y=" Percentage contribution to fossil collections", fill="Fieldwork") +
scale_fill_manual(values=wes_palette("Moonrise2")[c(3,1)],
labels=c("Domestic research", "Foreign research")) +
theme(legend.position = "bottom") +
coord_flip() +
ylim(0, 60) +
guides(fill=guide_legend(ncol=2)) +
facet_wrap(~Data, nrow = 3, scales = "free"))
(p17 <- ggplot(Research, aes(x=reorder(country, freq, sum), y=freq*100, fill=type)) +
geom_bar(stat="identity") +
labs(x="", y=" Percentage contribution to fossil collections", fill="Fieldwork") +
scale_fill_manual(values=wes_palette("Moonrise2")[c(3,1)],
labels=c("Domestic research", "Foreign research")) +
theme(legend.position = "bottom") +
coord_flip() +
ylim(0, 60) +
guides(fill=guide_legend(ncol=2)) +
facet_wrap(~Data, nrow = 3, scales = "free"))
(p17 <- ggplot(Research, aes(x=reorder(country, freq, sum), y=freq*100, fill=type)) +
geom_bar(stat="identity") +
labs(x="", y=" Percentage contribution to fossil collections", fill="Fieldwork") +
scale_fill_manual(values=wes_palette("Moonrise2")[c(3,1)],
labels=c("Domestic research", "Foreign research")) +
theme(legend.position = "bottom") +
coord_flip() +
ylim(0, 60) +
guides(fill=guide_legend(ncol=2)) +
facet_wrap(~Data, nrow = 3))
(p17 <- ggplot(Research, aes(x=reorder(country, freq, sum), y=freq*100, fill=type)) +
geom_bar(stat="identity") +
labs(x="", y=" Percentage contribution to fossil collections", fill="Fieldwork") +
scale_fill_manual(values=wes_palette("Moonrise2")[c(3,1)],
labels=c("Domestic research", "Foreign research")) +
theme(legend.position = "bottom") +
theme_bw() +
coord_flip() +
ylim(0, 60) +
guides(fill=guide_legend(ncol=2)) +
facet_wrap(~Data, nrow = 3))
(p17 <- ggplot(Research, aes(x=reorder(country, freq, sum), y=freq*100, fill=type)) +
geom_bar(stat="identity") +
labs(x="", y=" Percentage contribution to fossil collections", fill="Fieldwork") +
scale_fill_manual(values=wes_palette("Moonrise2")[c(3,1)],
labels=c("Domestic research", "Foreign research")) +
theme_bw() +
theme(legend.position = "bottom") +
coord_flip() +
ylim(0, 60) +
guides(fill=guide_legend(ncol=2)) +
facet_wrap(~Data, nrow = 3))
(p17 <- ggplot(Research, aes(x=reorder(country, freq, sum), y=freq*100, fill=type)) +
geom_bar(stat="identity") +
labs(x="", y=" Percentage contribution to fossil collections", fill="Fieldwork") +
scale_fill_manual(values=wes_palette("Moonrise2")[c(3,1)],
labels=c("Domestic research", "Foreign research")) +
theme_bw() +
theme(legend.position = "bottom",
panel.border = element_rect(colour = "black", fill=NA, size=1)) +
coord_flip() +
ylim(0, 60) +
guides(fill=guide_legend(ncol=2)) +
facet_wrap(~Data, nrow = 3))
(p17 <- ggplot(Research, aes(x=reorder(country, freq, sum), y=freq*100, fill=type)) +
geom_bar(stat="identity") +
labs(x="", y=" Percentage contribution to fossil collections", fill="Fieldwork") +
scale_fill_manual(values=wes_palette("Moonrise2")[c(3,1)],
labels=c("Domestic research", "Foreign research")) +
theme_bw() +
theme(legend.position = "bottom",
panel.border = element_rect(colour = "black", fill=NA, size=0.5)) +
coord_flip() +
ylim(0, 60) +
guides(fill=guide_legend(ncol=2)) +
facet_wrap(~Data, nrow = 3))
ggsave("Dark_data_graphs/17.Contribution.png", plot = p17,
device = "png", type = "cairo")
a <- network.plots(m.df)
b <- network.plots(p.df)
c <- network.plots(a.df)
(p18 <- ggarrange(a, b, c,
align='hv',
labels = c("A", "B", "C"),
nrow = 1,
ncol = 3,
common.legend = T,
legend = "bottom"))
ggsave("Dark_data_graphs/18.Extraction.png", plot = p18,
device = "png", type = "cairo")
pdf("Dark_data_graphs/18.Extraction.pdf",
width = par("din")[1],
height = par("din")[2])
print(p18)
dev.off()
# Plots results from setup.table, as both count and proportion
table.plots <- function(pivot, x, removeNA = T, colour){
if(removeNA == T){
pivot <- na.omit(pivot)
}
a <- ggplot(data = pivot, aes(x = name, y = value, fill = !!sym(x))) +
geom_bar(stat = 'identity') +
scale_fill_manual(values=colour) +
guides(fill=guide_legend(title="Rank")) +
ylab("Total occurrences") +
xlab("Dataset") +
theme_bw() +
theme(panel.grid.major = element_line(colour = "white"),
panel.grid.minor = element_line(colour = "white")) +
guides(alpha = "none")
b <- ggplot(data = pivot, aes(x = name, y = value, fill = !!sym(x))) +
geom_bar(stat = 'identity', position = 'fill') +
scale_fill_manual(values=colour) +
guides(fill=guide_legend(title="Rank")) +
ylab("Proportion of dataset") +
xlab("Dataset") +
theme_bw() +
theme(panel.grid.major = element_line(colour = "white"),
panel.grid.minor = element_line(colour = "white")) +
guides(alpha = "none")
ggarrange(a, b,
align='hv',
labels = c("A", "B"),
nrow = 1,
ncol = 2,
common.legend = T,
legend = "bottom")
}
(p2 <- table.plots(Cont, "Continent", colour = c(wes_palette("Zissou1"),
wes_palette("Royal1"),
wes_palette("Royal2"))))
(p4 <- table.plots(Grain, "Grainsize", removeNA = T, colour = c("darjeeling2")))
(p4 <- table.plots(Grain, "Grainsize", removeNA = T, colour = c(wes_palette("darjeeling2"))))
(p4 <- table.plots(Grain, "Grainsize", removeNA = T, colour = c(wes_palette("Darjeeling2"))))
(p4 <- table.plots(Grain, "Grainsize", removeNA = T, colour = c(wes_palette("Darjeeling2"))))
ggsave("Dark_data_graphs/4.Grain.props.png", plot = p4,
device = "png", type = "cairo")
##### LITHOLOGY #####
lith <- setup.table(m.only.dat,
pb.only.dat,
pub.all.dat,
all.dat,
"Finalised_lith",
pivot = F,
useNA = T)
# Cleaning data
lith <- rbind(lith[1,], lith[2,], lith[3,] + lith[4,], lith[5,])
lith <- tidyr::pivot_longer(lith, cols = c("Museum", "PBDB", "Published", "All"))
lith$value <- as.numeric(lith$value)
names(lith)[names(lith) == "Finalised_lith"] <- "Lithology"
# Plotting data
(p3 <- table.plots(lith, "Lithology", removeNA = T, colour = c(wes_palette("Zissou1"),
wes_palette("Royal1"),
wes_palette("Royal2"))))
ggsave("Dark_data_graphs/3.Lith.props.png", plot = p3,
device = "png", type = "cairo")
##### CONTINENTS #####
Cont <- setup.table(m.only.dat,
pb.only.dat,
pub.all.dat,
all.dat,
"Continent",
pivot = T,
useNA = F)
(p2 <- table.plots(Cont, "Continent", colour = c(wes_palette("Zissou1"),
wes_palette("Royal1"),
wes_palette("Royal2"))))
ggsave("Dark_data_graphs/2.Cont.props.png", plot = p2,
device = "png", type = "cairo")
##### TAXONOMIC RANK #####
Rank <- setup.table(m.only.dat,
pb.only.dat,
pub.all.dat,
all.dat,
"Rank",
pivot = T,
useNA = F)
(p1 <- table.plots(Rank, "Rank"))
(p1 <- table.plots(Rank, "Rank", color = c(wes_palette("Zissou1"),
wes_palette("Royal1"),
wes_palette("Royal2"))))
(p1 <- table.plots(Rank, "Rank", colour = c(wes_palette("Zissou1"),
wes_palette("Royal1"),
wes_palette("Royal2"))))
ggsave("Dark_data_graphs/1.Rank.props.png", plot = p1,
device = "png", type = "cairo")
(p2 <- table.plots(Cont, "Continent", colour = c(
wes_palette("Royal1"),
wes_palette("Royal2"))))
(p2 <- table.plots(Cont, "Continent", colour = c(
wes_palette("Asteroid1"),
wes_palette("Royal2"))))
(p2 <- table.plots(Cont, "Continent", colour = c(
wes_palette("AsteroidCity1"),
wes_palette("Royal2"))))
(p2 <- table.plots(Cont, "Continent", colour = c(
wes_palette("Moonrise1"),
wes_palette("Royal2"))))
(p2 <- table.plots(Cont, "Continent", colour = c(wes_palette("Royal2"))))
(p2 <- table.plots(Cont, "Continent", colour = c(wes_palette("Royal2"),
wes_palette("Royal1"))))
ggsave("Dark_data_graphs/2.Cont.props.png", plot = p2,
device = "png", type = "cairo")
m.dat.rotate
all.dat
unique(all.dat$Museum_code)
m.dat$Museum
unique(m.dat$Museum)
m.only.dat
unique(m.only.dat$Museum_code)
